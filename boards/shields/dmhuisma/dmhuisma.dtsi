#include <dt-bindings/zmk/matrix_transform.h>

/ {

    chosen {
        zmk,physical-layout = &physical_layout0;
        // Other chosen items
    };

    kscan0: kscan_composite {
        compatible = "zmk,kscan-composite";
        status = "okay";
        columns = <12>;
        rows = <8>;
    };

    physical_layout0: physical_layout_0 { // First physical layout, use different naming for other layouts
        compatible = "zmk,physical-layout";
        display-name = "Default Layout";
        kscan = <&kscan0>; // Label of the kscan node, optional if all layouts use the same
        transform = <&default_transform>; // Label of the matrix transform for this layout
    };

    default_transform: keymap_transform0 {
        compatible = "zmk,matrix-transform";
        columns = <12>;
        rows = <8>;
        // key matrix, fingers and thumb clusters, rows 0 - 5
        // dpad and RKJXT1F42001 buttons, left side, row 6
        // EVQWGD001 button, right side, row 7
        map = <
            RC(0,0) RC(0,1) RC(0,2) RC(0,3) RC(0,4) RC(0,5)                     RC(0,6) RC(0,7) RC(0,8) RC(0,9) RC(0,10) RC(0,11)
            RC(1,0) RC(1,1) RC(1,2) RC(1,3) RC(1,4) RC(1,5)                     RC(1,6) RC(1,7) RC(1,8) RC(1,9) RC(1,10) RC(1,11)
            RC(2,0) RC(2,1) RC(2,2) RC(2,3) RC(2,4) RC(2,5)                     RC(2,6) RC(2,7) RC(2,8) RC(2,9) RC(2,10) RC(2,11)
            RC(3,0) RC(3,1) RC(3,2) RC(3,3) RC(3,4) RC(3,5)                     RC(3,6) RC(3,7) RC(3,8) RC(3,9) RC(3,10) RC(3,11)
                            RC(4,2) RC(4,3)                                                     RC(4,8) RC(4,9)

                                            RC(5,0)                                     RC(5,5)
                                                    RC(5,1) RC(5,2)     RC(5,7) RC(5,6)
                                                    RC(5,4) RC(5,3)     RC(5,8) RC(5,9)

                                                    RC(6,0)
                                            RC(6,1) RC(6,2) RC(6,3)
                                                    RC(6,4)

                                                    RC(6,5)
                                            RC(6,6)         RC(6,7)
                                                    RC(6,8)

                                                                                RC(7,0)
        >;
    };

    // disabled by default - only on left side
    RKJXT1F42001_encoder: encoder_RKJXT1F42001 {
        compatible = "alps,ec11";
        a-gpios = <&gpio0 6 (GPIO_ACTIVE_HIGH | GPIO_PULL_UP)>;
        b-gpios = <&gpio0 8 (GPIO_ACTIVE_HIGH | GPIO_PULL_UP)>;
        steps = <15>;
        status = "disabled";
    };

    // disabled by default - only on right side
    EVQWGD001_encoder: encoder_EVQWGD001 {
        compatible = "alps,ec11";
        a-gpios = <&gpio1 11 (GPIO_ACTIVE_HIGH | GPIO_PULL_UP)>;
        b-gpios = <&gpio0 10 (GPIO_ACTIVE_HIGH | GPIO_PULL_UP)>;
        steps = <15>;
        status = "disabled";
    };

    sensors: sensors {
        compatible = "zmk,keymap-sensors";
        sensors = <&RKJXT1F42001_encoder &EVQWGD001_encoder>;
        triggers-per-rotation = <15>;
    };
};

// these are configured the same for both sides
&pinctrl {

    // I2C for MCP23017
    i2c0_default: i2c0_default {
        group1 {
            psels = <NRF_PSEL(TWIM_SDA, 0, 24)>,
                    <NRF_PSEL(TWIM_SCL, 0, 22)>;
        };
    };
    i2c0_sleep: i2c0_sleep {
        group1 {
            psels = <NRF_PSEL(TWIM_SDA, 0, 24)>,
                    <NRF_PSEL(TWIM_SCL, 0, 22)>;
            low-power-enable;
        };
    };

    // SPI for the nice view display
    spi1_default: spi1_default {
        group1 {
            psels = <NRF_PSEL(SPIM_SCK, 0, 11)>,
                    <NRF_PSEL(SPIM_MOSI, 1, 0)>;
        };
    };
    spi1_sleep: spi1_sleep {
        group1 {
            psels = <NRF_PSEL(SPIM_SCK, 0, 11)>,
                    <NRF_PSEL(SPIM_MOSI, 1, 0)>;
            low-power-enable;
        };
    };
};

&i2c0 {
    status = "okay";

    mcp_io: mcp23017@20 {
        compatible = "microchip,mcp230xx";
        status = "okay";
        gpio-controller;
        reg = <0x20>;
        #gpio-cells = <2>;
        ngpios = <16>;
        int-gpios = <&gpio1 6 GPIO_ACTIVE_LOW>;
        reset-gpios = <&gpio0 20 GPIO_ACTIVE_LOW>;
    };
};

nice_view_spi: &spi1 {
    compatible = "nordic,nrf-spim";
    pinctrl-0 = <&spi1_default>;
    pinctrl-1 = <&spi1_sleep>;
    pinctrl-names = "default", "sleep";
    cs-gpios = <&gpio1 4 GPIO_ACTIVE_HIGH>;
};
