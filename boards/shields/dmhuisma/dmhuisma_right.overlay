#include "dmhuisma.dtsi" // The shared dtsi file is included in the overlay

&default_transform { // Offset of 3 because the left side has 3 columns
    col-offset = <6>;
};

// Label of the kscan node in the dtsi
&kscan0 {
    col-gpios
        = <&mcp_io 0 GPIO_ACTIVE_HIGH>
        , <&mcp_io 1 GPIO_ACTIVE_HIGH>
        , <&mcp_io 2 GPIO_ACTIVE_HIGH>
        , <&mcp_io 3 GPIO_ACTIVE_HIGH>
        , <&mcp_io 4 GPIO_ACTIVE_HIGH>
        , <&mcp_io 5 GPIO_ACTIVE_HIGH>
        ;

    // might need to be pull down?
    row-gpios
        = <&mcp_io 6 (GPIO_ACTIVE_HIGH | GPIO_PULL_UP)>
        , <&mcp_io 7 (GPIO_ACTIVE_HIGH | GPIO_PULL_UP)>
        , <&mcp_io 8 (GPIO_ACTIVE_HIGH | GPIO_PULL_UP)>
        , <&mcp_io 9 (GPIO_ACTIVE_HIGH | GPIO_PULL_UP)>
        , <&mcp_io 10 (GPIO_ACTIVE_HIGH | GPIO_PULL_UP)>
        , <&mcp_io 11 (GPIO_ACTIVE_HIGH | GPIO_PULL_UP)>
        ;
};

&pinctrl {
    i2c0_default: i2c0_default {
        group1 {
            psels = <NRF_PSEL(TWIM_SDA, 0, 24)>,
                    <NRF_PSEL(TWIM_SCL, 0, 22)>;
        };
    };

    i2c0_sleep: i2c0_sleep {
        group1 {
            psels = <NRF_PSEL(TWIM_SDA, 0, 24)>,
                    <NRF_PSEL(TWIM_SCL, 0, 22)>;
            low-power-enable;
        };
    };

    spi1_default: spi1_default {
        group1 {
            psels = <NRF_PSEL(SPIM_SCK, 0, 17)>,
                <NRF_PSEL(SPIM_MOSI, 0, 6)>,
                <NRF_PSEL(SPIM_MISO, 0, 8)>;
        };
    };

    spi1_sleep: spi1_sleep {
        group1 {
            psels = <NRF_PSEL(SPIM_SCK, 0, 17)>,
                <NRF_PSEL(SPIM_MOSI, 0, 6)>,
                <NRF_PSEL(SPIM_MISO, 0, 8)>;
            low-power-enable;
        };
    };
};

&i2c0 {
    status = "okay";

    mcp_io: mcp23017@20 {
        compatible = "microchip,mcp230xx";
        status = "okay";
        gpio-controller;
        reg = <0x20>;
        #gpio-cells = <2>;
        ngpios = <16>;
        int-gpios = <&gpio1 6 GPIO_ACTIVE_LOW>;
        reset-gpios = <&gpio0 20 GPIO_ACTIVE_LOW>;
    };
};

#include <zephyr/dt-bindings/input/input-event-codes.h>

&spi1 {
    status = "okay";
    compatible = "nordic,nrf-spim";
    pinctrl-0 = <&spi1_default>;
    pinctrl-1 = <&spi1_sleep>;
    pinctrl-names = "default", "sleep";
    cs-gpios = <&gpio1 15 GPIO_ACTIVE_LOW>;

    trackball: trackball@0 {
        status = "okay";
        compatible = "pixart,pmw3610";
        reg = <0>;
        spi-max-frequency = <2000000>;
        irq-gpios = <&gpio1 13 (GPIO_ACTIVE_LOW | GPIO_PULL_UP)>;
        cpi = <600>;
        evt-type = <INPUT_EV_REL>;
        x-input-code = <INPUT_REL_X>;
        y-input-code = <INPUT_REL_Y>;

        force-awake;
        /* keep the sensor awake while ZMK activity state is ACTIVE,
           fallback to normal downshift mode after ZMK goes into IDLE / SLEEP mode.
           thus, the sensor would be a `wakeup-source` */
    };
};

/ {
    trackball_listener {
        compatible = "zmk,input-listener";
        device = <&trackball>;
    };
};
